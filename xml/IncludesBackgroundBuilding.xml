<?xml version="1.0" encoding="utf-8"?>
<includes>

    <!--Overlay-->
    <include name="DialogOverlay">
        <!--Dialog Overlay default-->
        <control type="image">
            <visible>[Skin.HasSetting(BackgroundOverlayMediaViewOnly) + !Window.IsActive(Home)] | [Skin.HasSetting(BackgroundOverlayHomeOnly) + String.StartsWith(Window.Property(xmlfile),Home)] | [!Skin.HasSetting(BackgroundOverlayMediaViewOnly) + !Skin.HasSetting(BackgroundOverlayHomeOnly)]</visible>
            <include>DimensionsFullscreen</include>
            <texture fallback="diffuse/background.png">$INFO[Skin.String(BackgroundOverlayTexture)]</texture>
            <include condition="Skin.String(BackgroundOverlayColor) + !Skin.String(BackgroundOverlayColor,None)">bgOverlayDiffuse</include>
            <visible>!Control.IsVisible(507)</visible>
            <visible>Skin.String(BackgroundOverlayTexture)</visible>
        </control>
    </include>

    <include name="bgColorDiffuse">
        <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor)]</colordiffuse>
    </include>

    <include name="bgOverlayDiffuse">
        <colordiffuse>$INFO[Skin.String(BackgroundOverlayColor)]</colordiffuse>
    </include>

    <include name="DialogOverlayExtra">
        <!-- dim screen overlay used in certain dialogs -->
        <control type="image">
            <include>DimensionsFullscreen</include>
            <texture>diffuse/background.png</texture>
            <colordiffuse>aawhite</colordiffuse>
            <visible>!Skin.String(BackgroundDiffuseColor.base)</visible>
        </control>
        <control type="image">
            <include>DimensionsFullscreen</include>
            <texture>diffuse/background.png</texture>
            <colordiffuse>aa0f0f0f</colordiffuse>
            <visible>!Skin.String(BackgroundDiffuseColor.base)</visible>
        </control>
        <control type="image" description="panel behind bg">
            <include>DimensionsFullscreen</include>
            <texture>diffuse/background.png</texture>
            <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor.base)]</colordiffuse>
            <visible>Skin.String(BackgroundDiffuseColor.base)</visible>
        </control>
    </include>

    <include name="fanartSpeed5">
        <timeperimage>5000</timeperimage>
    </include>
    <include name="fanartSpeed6">
        <timeperimage>6000</timeperimage>
    </include>
    <include name="fanartSpeed8">
        <timeperimage>8000</timeperimage>
    </include>
    <include name="fanartSpeed10">
        <timeperimage>10000</timeperimage>
    </include>
    <include name="fanartSpeed15">
        <timeperimage>15000</timeperimage>
    </include>
    <include name="fanartSpeed20">
        <timeperimage>20000</timeperimage>
    </include>
    <include name="fanartSpeed30">
        <timeperimage>30000</timeperimage>
    </include>
    <include name="fanartSpeed60">
        <timeperimage>60000</timeperimage>
    </include>

    <include name="fanartSpeed">
        <include condition="Skin.String(SkinHelper.RandomFanartDelay,6)">fanartSpeed6</include>
        <include condition="Skin.String(SkinHelper.RandomFanartDelay,5)">fanartSpeed5</include>
        <include condition="Skin.String(SkinHelper.RandomFanartDelay,8)">fanartSpeed8</include>
        <include condition="Skin.String(SkinHelper.RandomFanartDelay,10)">fanartSpeed10</include>
        <include condition="Skin.String(SkinHelper.RandomFanartDelay,15)">fanartSpeed15</include>
        <include condition="Skin.String(SkinHelper.RandomFanartDelay,20)">fanartSpeed20</include>
        <include condition="Skin.String(SkinHelper.RandomFanartDelay,30)">fanartSpeed30</include>
        <include condition="Skin.String(SkinHelper.RandomFanartDelay,60)">fanartSpeed60</include>
        <include condition="!Skin.String(SkinHelper.RandomFanartDelay)">fanartSpeed30</include>
    </include>

    <include name="randomizeImages">
        <randomize>true</randomize>
    </include>

    <!--Global Background -->
    <include name="GlobalBackground">

        <!-- background panel -->
        <control type="image" description="panel behind bg">
            <include>DimensionsFullscreen</include>
            <texture>colors/color_white.png</texture>
            <colordiffuse>$INFO[Skin.String(BackgroundDiffuseColor.base)]</colordiffuse>
            <visible>Skin.String(BackgroundDiffuseColor) + !Skin.String(BackgroundDiffuseColor, None)</visible>
        </control>

        <!-- global background -->
        <control type="multiimage" id="99004">
            <include>DimensionsFullscreen</include>
            <imagepath background="true" fallback="colors/color_black.png">$VAR[backgroundVar]</imagepath>
            <aspectratio>scale</aspectratio>
            <fadetime>800</fadetime>
            <include condition="Skin.String(BackgroundDiffuseColor) + !Skin.String(BackgroundDiffuseColor, None) + !Skin.String(BackgroundDiffuseColor.name, None)">bgColorDiffuse</include>
            <include condition="Skin.HasSetting(RandomizeBackground)">randomizeImages</include>
            <include>fanartSpeed</include>
            <loop>yes</loop>
            <animation effect="zoom" start="110" end="130" center="auto" time="12000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
            <animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
        </control>
        <!-- fanart image background (hidden with visibility conditions)-->
        <control type="image" id="99006">
            <left>-1</left>
            <top>-1</top>
            <width>1</width>
            <height>1</height>
            <texture background="true">$VAR[fanartBackground]</texture>
            <visible>Skin.HasSetting(ShowFanartBackground) | !String.IsEmpty(Window(Home).Property(netflixview)) | Control.IsVisible(523)</visible>
            <include condition="Window.IsMedia">disabledFanart</include>
        </control>
        <include condition="Skin.HasSetting(ShowFanartBackground) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">extraFanartBackground</include>

        <include>DialogOverlay</include>

        <!-- Snow Effect -->
        <control type="group">
            <include condition="Skin.HasSetting(enablesnow) + [Window.IsActive(Home) | Skin.HasSetting(expandsnow)]">snow</include>
        </control>

        <!-- touchscreen workaround for windows tablets -->
        <include condition="Skin.HasSetting(EnableTouchSupport)">TouchScreenWorkaround</include>

    </include>

    <include name="extraFanartBackground">
        <control type="multiimage" id="99005">
            <left>-1</left>
            <top>-1</top>
            <width>1</width>
            <height>1</height>
            <imagepath background="true">$VAR[extraFanartBackground]</imagepath>
            <aspectratio>scale</aspectratio>
            <include condition="Skin.String(extrafanartdelay,6)">fanartSpeed6</include>
            <include condition="Skin.String(extrafanartdelay,5)">fanartSpeed5</include>
            <include condition="Skin.String(extrafanartdelay,8)">fanartSpeed8</include>
            <include condition="Skin.String(extrafanartdelay,10)">fanartSpeed10</include>
            <include condition="Skin.String(extrafanartdelay,15)">fanartSpeed15</include>
            <include condition="Skin.String(extrafanartdelay,20)">fanartSpeed20</include>
            <include condition="Skin.String(extrafanartdelay,30)">fanartSpeed30</include>
            <include condition="Skin.String(extrafanartdelay,60)">fanartSpeed60</include>
            <include condition="Window.IsMedia">disabledFanart</include>
            <include condition="Window.IsMedia">disabledExtraFanart</include>
            <randomize>true</randomize>
            <loop>yes</loop>
            <!-- general visibility conditions -->
            <visible>Skin.HasSetting(SkinHelper.EnableExtraFanart)</visible>
            <visible>
                [Window.IsActive(Home) + [Control.HasFocus(77777) | ControlGroup(77777).HasFocus() | Window.IsActive(DialogVideoInfo.xml)] + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt))] |
                [Container.Content(Genres) + Skin.String(moviegenrefanart.path) + !String.IsEmpty(ListItem.label) + !String.IsEqual(ListItem.label,..)] | 
                [Window.IsMedia + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt))]
            </visible>
        </control>
    </include>

    <include name="disabledFanart">
        <!-- disabled fanart per view -->
        <visible>
            ![Control.IsVisible(109) + Skin.HasSetting(View109_DisableFanArt)] + 
            ![Control.IsVisible(50) + Skin.HasSetting(View50_DisableFanArt)] + 
            ![Control.IsVisible(51) + Skin.HasSetting(View51_DisableFanArt)] + 
            ![Control.IsVisible(52) + Skin.HasSetting(View52_DisableFanArt)] + 
            ![Control.IsVisible(53) + Skin.HasSetting(View53_DisableFanArt)] + 
            ![Control.IsVisible(54) + Skin.HasSetting(View54_DisableFanArt)] + 
            ![Control.IsVisible(55) + Skin.HasSetting(View55_DisableFanArt)] + 
            ![Control.IsVisible(56) + Skin.HasSetting(View56_DisableFanArt)] + 
            ![Control.IsVisible(57) + Skin.HasSetting(View57_DisableFanArt)] + 
            ![Control.IsVisible(58) + Skin.HasSetting(View58_DisableFanArt)] + 
            ![Control.IsVisible(59) + Skin.HasSetting(View59_DisableFanArt)] + 
            ![Control.IsVisible(501) + Skin.HasSetting(View501_DisableFanArt)] + 
            ![Control.IsVisible(502) + Skin.HasSetting(View502_DisableFanArt)] + 
            ![Control.IsVisible(503) + Skin.HasSetting(View503_DisableFanArt)] + 
            ![Control.IsVisible(504) + Skin.HasSetting(View504_DisableFanArt)] + 
            ![Control.IsVisible(505) + Skin.HasSetting(View505_DisableFanArt)] + 
            ![Control.IsVisible(506) + Skin.HasSetting(View506_DisableFanArt)] + 
            ![Control.IsVisible(507) + Skin.HasSetting(View507_DisableFanArt)] + 
            ![Control.IsVisible(508) + Skin.HasSetting(View508_DisableFanArt)] + 
            ![Control.IsVisible(509) + Skin.HasSetting(View509_DisableFanArt)] + 
            ![Window.IsMedia + Control.IsVisible(510) + Skin.HasSetting(View510_DisableFanArt)] + 
            ![Window.IsMedia + Control.IsVisible(511) + Skin.HasSetting(View511_DisableFanArt)] + 
            ![Control.IsVisible(512) + Skin.HasSetting(View512_DisableFanArt)] + 
            ![Control.IsVisible(513) + Skin.HasSetting(View513_DisableFanArt)] + 
            ![Control.IsVisible(514) + Skin.HasSetting(View514_DisableFanArt)] + 
            ![Control.IsVisible(515) + Skin.HasSetting(View515_DisableFanArt)] + 
            ![Control.IsVisible(516) + Skin.HasSetting(View516_DisableFanArt)] + 
            ![Control.IsVisible(517) + Skin.HasSetting(View517_DisableFanArt)] + 
            ![Control.IsVisible(518) + Skin.HasSetting(View518_DisableFanArt)] + 
            ![Control.IsVisible(519) + Skin.HasSetting(View519_DisableFanArt)] + 
            ![Window.IsMedia + Control.IsVisible(520) + Skin.HasSetting(View520_DisableFanArt)] + 
            ![Control.IsVisible(521) + Skin.HasSetting(View521_DisableFanArt)] + 
            ![Control.IsVisible(522) + Skin.HasSetting(View522_DisableFanArt)] + 
            ![Control.IsVisible(523) + Skin.HasSetting(View523_DisableFanArt)] + 
            ![Control.IsVisible(524) + Skin.HasSetting(View524_DisableFanArt)]
        </visible>
    </include>

    <include name="disabledExtraFanart">
        <!-- disabled fanart per view -->
        <visible>
            ![Control.IsVisible(109) + Skin.HasSetting(View109_DisableExtraFanArt)] + 
            ![Control.IsVisible(50) + Skin.HasSetting(View50_DisableExtraFanArt)] + 
            ![Control.IsVisible(51) + Skin.HasSetting(View51_DisableExtraFanArt)] + 
            ![Control.IsVisible(52) + Skin.HasSetting(View52_DisableExtraFanArt)] + 
            ![Control.IsVisible(53) + Skin.HasSetting(View53_DisableExtraFanArt)] + 
            ![Control.IsVisible(54) + Skin.HasSetting(View54_DisableExtraFanArt)] + 
            ![Control.IsVisible(55) + Skin.HasSetting(View55_DisableExtraFanArt)] + 
            ![Control.IsVisible(56) + Skin.HasSetting(View56_DisableExtraFanArt)] + 
            ![Control.IsVisible(57) + Skin.HasSetting(View57_DisableExtraFanArt)] + 
            ![Control.IsVisible(58) + Skin.HasSetting(View58_DisableExtraFanArt)] + 
            ![Control.IsVisible(59) + Skin.HasSetting(View59_DisableExtraFanArt)] + 
            ![Control.IsVisible(501) + Skin.HasSetting(View501_DisableExtraFanArt)] + 
            ![Control.IsVisible(502) + Skin.HasSetting(View502_DisableExtraFanArt)] + 
            ![Control.IsVisible(503) + Skin.HasSetting(View503_DisableExtraFanArt)] + 
            ![Control.IsVisible(504) + Skin.HasSetting(View504_DisableExtraFanArt)] + 
            ![Control.IsVisible(505) + Skin.HasSetting(View505_DisableExtraFanArt)] + 
            ![Control.IsVisible(506) + Skin.HasSetting(View506_DisableExtraFanArt)] + 
            ![Control.IsVisible(507) + Skin.HasSetting(View507_DisableExtraFanArt)] + 
            ![Control.IsVisible(508) + Skin.HasSetting(View508_DisableExtraFanArt)] + 
            ![Control.IsVisible(509) + Skin.HasSetting(View509_DisableExtraFanArt)] + 
            ![Window.IsMedia + Control.IsVisible(510) + Skin.HasSetting(View510_DisableExtraFanArt)] + 
            ![Window.IsMedia + Control.IsVisible(511) + Skin.HasSetting(View511_DisableExtraFanArt)] + 
            ![Control.IsVisible(512) + Skin.HasSetting(View512_DisableExtraFanArt)] + 
            ![Control.IsVisible(513) + Skin.HasSetting(View513_DisableExtraFanArt)] + 
            ![Control.IsVisible(514) + Skin.HasSetting(View514_DisableExtraFanArt)] + 
            ![Control.IsVisible(515) + Skin.HasSetting(View515_DisableExtraFanArt)] + 
            ![Control.IsVisible(516) + Skin.HasSetting(View516_DisableExtraFanArt)] + 
            ![Control.IsVisible(517) + Skin.HasSetting(View517_DisableExtraFanArt)] + 
            ![Control.IsVisible(518) + Skin.HasSetting(View518_DisableExtraFanArt)] + 
            ![Control.IsVisible(519) + Skin.HasSetting(View519_DisableExtraFanArt)] + 
            ![Window.IsMedia + Control.IsVisible(520) + Skin.HasSetting(View520_DisableExtraFanArt)] + 
            ![Control.IsVisible(521) + Skin.HasSetting(View521_DisableExtraFanArt)] + 
            ![Control.IsVisible(522) + Skin.HasSetting(View522_DisableExtraFanArt)] + 
            ![Control.IsVisible(523) + Skin.HasSetting(View523_DisableExtraFanArt)] + 
            ![Control.IsVisible(524) + Skin.HasSetting(View524_DisableExtraFanArt)]
        </visible>
    </include>

    <variable name="fanartBackground">
        
        <!-- extendedinfo -->
        <value condition="[Window.IsActive(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml)]">$VAR[fanartBackground_extendedinfo]</value>
        <!--nextaired script backgrounds -->
        <value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)]">$VAR[fanartBackground_nextaired]</value>
        <!-- custom search -->
        <value condition="Window.IsActive(script-skin_helper_service-CustomSearch.xml)">$VAR[fanartBackground_search]</value>

        <!-- genre fanart -->
        <value condition="Container.Content(Genres) + String.Contains(Skin.String(moviegenrefanart.path),script.skin.helper) + !String.IsEmpty(ListItem.label) + !String.IsEqual(ListItem.label,..)">http://localhost:52307/getmoviegenreimagesrandom&amp;title=$INFO[Listitem.Label]&amp;type=fanart.0</value>
        <value condition="Container.Content(Genres) + Skin.String(moviegenrefanart.path) + !String.IsEmpty(ListItem.label) + !String.IsEqual(ListItem.label,..)">$INFO[Skin.String(moviegenrefanartpath)]/$INFO[ListItem.Label].jpg</value>

        <!-- normal fanart backgrounds -->
        <value condition="!String.IsEmpty(ListItem.PicturePath)">$INFO[ListItem.PicturePath]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(albumartist.fanart))">$INFO[Container.Art(albumartist.fanart)]</value>

        <!-- HOME widgets on focus-->
        <value condition="Window.IsActive(Home) + [Control.HasFocus(1508) | Control.HasFocus(77777) | ControlGroup(77777).HasFocus() | ControlGroup(505).HasFocus()] + !String.IsEmpty(Window(Home).Property(ListItem.Art.fanart))">$INFO[Window(Home).Property(ListItem.Art.fanart)]</value>
        <value condition="Window.IsActive(Home) + [Control.HasFocus(1508) | Control.HasFocus(77777) | ControlGroup(77777).HasFocus() | ControlGroup(505).HasFocus()] + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.fanart)]</value>

        <!-- widget fanart as shortcut background -->
        <value condition="Window.IsActive(Home) + String.Contains(Container(300).ListItem.Property(Background),widgetfanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.fanart)]</value>

        <!-- skinhelper provided art in media windows-->
        <value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.Fanart)) + !Window.IsActive(Home)">$INFO[Window(home).Property(SkinHelper.ListItem.Art.Fanart)]</value>
    </variable>
    <variable name="fanartBackground_extendedinfo">
        <value condition="!String.IsEmpty(Window.Property(movie.FanArt))">$INFO[Window.Property(movie.FanArt)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(fanart))">$INFO[Window(home).Property(fanart)]</value>
        <value condition="!String.IsEmpty(Window.Property(actor.fanart))">$INFO[Window.Property(actor.fanart)]</value>
        <value condition="!String.IsEmpty(Window.Property(fanart))">$INFO[Window.Property(fanart)]</value>
        <value condition="!String.IsEmpty(Container(750).ListItem.Property(Original))">$INFO[Container(750).ListItem.Property(Original)]</value>
        <value condition="!String.IsEmpty(Window.Property(actor.thumb))">$INFO[Window.Property(actor.thumb)]</value>
        <value condition="!String.IsEmpty(Window.Property(thumb))">$INFO[Window.Property(thumb)]</value>
        <value condition="!String.IsEmpty(Container(500).ListItem.Property(Fanart_small))">$INFO[Container(500).ListItem.Property(Fanart_small)]</value>
        <value condition="!String.IsEmpty(Window.Property(movie.FanArt))">$INFO[Window.Property(movie.FanArt)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(fanart))">$INFO[Window(home).Property(fanart)]</value>
        <value condition="!String.IsEmpty(Window.Property(actor.fanart))">$INFO[Window.Property(actor.fanart)]</value>
        <value condition="!String.IsEmpty(Window.Property(fanart))">$INFO[Window.Property(fanart)]</value>
        <value condition="!String.IsEmpty(Container(750).ListItem.Property(Original))">$INFO[Container(750).ListItem.Property(Original)]</value>
        <value condition="!String.IsEmpty(Window.Property(actor.thumb))">$INFO[Window.Property(actor.thumb)]</value>
        <value condition="!String.IsEmpty(Window.Property(thumb))">$INFO[Window.Property(thumb)]</value>
        <value condition="!String.IsEmpty(Container(500).ListItem.Property(Fanart_small))">$INFO[Container(500).ListItem.Property(Fanart_small)]</value>
    </variable>
    <variable name="fanartBackground_nextaired">
        <value condition="Control.IsVisible(200) + !String.IsEmpty(Container(200).ListItem.Property(Fanart))">$INFO[Container(200).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(201) + !String.IsEmpty(Container(201).ListItem.Property(Fanart))">$INFO[Container(201).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(202) + !String.IsEmpty(Container(202).ListItem.Property(Fanart))">$INFO[Container(202).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(203) + !String.IsEmpty(Container(203).ListItem.Property(Fanart))">$INFO[Container(203).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(204) + !String.IsEmpty(Container(204).ListItem.Property(Fanart))">$INFO[Container(204).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(205) + !String.IsEmpty(Container(205).ListItem.Property(Fanart))">$INFO[Container(205).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(206) + !String.IsEmpty(Container(206).ListItem.Property(Fanart))">$INFO[Container(206).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(207) + !String.IsEmpty(Container(207).ListItem.Property(Fanart))">$INFO[Container(207).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(208) + !String.IsEmpty(Container(208).ListItem.Property(Fanart))">$INFO[Container(208).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(209) + !String.IsEmpty(Container(209).ListItem.Property(Fanart))">$INFO[Container(209).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(210) + !String.IsEmpty(Container(210).ListItem.Property(Fanart))">$INFO[Container(210).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(211) + !String.IsEmpty(Container(211).ListItem.Property(Fanart))">$INFO[Container(211).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(212) + !String.IsEmpty(Container(212).ListItem.Property(Fanart))">$INFO[Container(212).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(213) + !String.IsEmpty(Container(213).ListItem.Property(Fanart))">$INFO[Container(213).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(214) + !String.IsEmpty(Container(214).ListItem.Property(Fanart))">$INFO[Container(214).ListItem.Property(Fanart)]</value>
        <value condition="Control.IsVisible(215) + !String.IsEmpty(Container(215).ListItem.Property(Fanart))">$INFO[Container(215).ListItem.Property(Fanart)]</value>
    </variable>
    <variable name="fanartBackground_search">
        <value condition="Control.HasFocus(3110) + !String.IsEmpty(Container(3110).ListItem.Art(fanart))">$INFO[Container(3110).ListItem.Art(fanart)]</value>
        <value condition="Control.HasFocus(3111) + !String.IsEmpty(Container(3111).ListItem.Art(fanart))">$INFO[Container(3111).ListItem.Art(fanart)]</value>
        <value condition="Control.HasFocus(3112) + !String.IsEmpty(Container(3112).ListItem.Art(tvshow.fanart))">$INFO[Container(3112).ListItem.Art(tvshow.fanart)]</value>
    </variable>
    
    <variable name="backgroundVar">

        <value condition="[Window.IsActive(LoginScreen.xml) | Window.IsActive(StartUp.xml)] + Skin.String(LoginBackground)">$INFO[Skin.String(LoginBackground)]</value>
        <!-- animated fanart background -->
        <value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.AnimatedFanArt)) + Skin.HasSetting(AnimatedFanart)">$INFO[Window(home).Property(SkinHelper.ListItem.Art.AnimatedFanArt)]</value>
        <!-- extrafanart background -->
        <value condition="Control.IsVisible(99005) + !String.IsEmpty(Control.GetLabel(99005))">$INFO[Control.GetLabel(99005)]</value>
        <!-- normal fanart background -->
        <value condition="Control.IsVisible(99006) + !String.IsEmpty(Control.GetLabel(99006))">$INFO[Control.GetLabel(99006)]</value>
        <!-- conditional background override -->
        <value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ConditionalBackground))">$INFO[Window(home).Property(SkinHelper.ConditionalBackground)]</value>
        <!-- weather fanart -->
        <value condition="Window.IsActive(MyWeather.xml)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]$INFO[Skin.String(WeatherFanArtPack.ext)]</value>	

        <!-- section backgrounds when skinshortcuts dialog active -->
        <value condition="Skin.HasSetting(UseSectionBackground) + !String.IsEmpty(Container(211).ListItem.Property(Background))">$INFO[Container(211).ListItem.Property(Background)]</value>

        <!-- section backgrounds when home active -->
        <value condition="Skin.HasSetting(UseSectionBackground) + !String.IsEmpty(Container(4444).ListItem.Property(Background)) + Control.HasFocus(4444)">$INFO[Container(4444).ListItem.Property(Background)]</value>
        <value condition="Skin.HasSetting(UseSectionBackground) + !String.IsEmpty(Container(300).ListItem.Property(Background)) + !String.Contains(Container(300).ListItem.Property(Background),widgetfanart)">$INFO[Container(300).ListItem.Property(Background)]</value>

        <!-- section background when home not active -->
        <value condition="Skin.HasSetting(UseSectionBackground) + !String.IsEmpty(Window(home).Property(SectionBackground)) + !Window.IsActive(script-skinshortcuts.xml) + !Window.IsActive(home)">$INFO[Window(home).Property(SectionBackground)]</value>

        <!-- global background -->
        <value condition="String.Contains(Skin.String(CustomBackgroundSetting),VAR)">$VAR[CustomBackgroundSetting]</value>
        <value condition="Skin.String(CustomBackgroundSetting)">$INFO[Skin.String(CustomBackgroundSetting)]</value>
    </variable>

    <variable name="extraFanartBackground">
        <!-- extra fanart backgrounds -->
        <!-- genre fanart -->
        <value condition="Container.Content(Genres) + Skin.String(moviegenrefanart.path) + !String.IsEmpty(ListItem.label) + !String.IsEqual(ListItem.label,..)">$INFO[Skin.String(moviegenrefanart.path)]$INFO[ListItem.Label].jpg</value>
        <!-- normal extrafanart -->
        <value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt)]</value>
        <value>colors/color_black.png</value>
    </variable>
    
    <variable name="netflixThumb">
        <!-- animated fanart background -->
        <value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.AnimatedFanArt)) + Skin.HasSetting(AnimatedFanart)">$INFO[Window(home).Property(SkinHelper.ListItem.Art.AnimatedFanArt)]</value>
        <!-- extrafanart background -->
        <value condition="Control.IsVisible(99005) + !String.IsEmpty(Control.GetLabel(99005))">$INFO[Control.GetLabel(99005)]</value>
        <!-- normal fanart background -->
        <value condition="Control.IsVisible(99006) + !String.IsEmpty(Control.GetLabel(99006))">$INFO[Control.GetLabel(99006)]</value>
    </variable>
   

</includes>